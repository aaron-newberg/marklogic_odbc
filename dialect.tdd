<?xml version="1.0" encoding="utf-8"?>
<dialect name='MarkLogic'
    class='marklogic_odbc'
    base='PostgreSQL90Dialect'
    version='18.1'>
  <function-map>
    <function group='numeric' name='ABS' return-type='int'>
      <formula>ABS(%1)</formula>
      <argument type='int' />
    </function>
    <function group='numeric' name='ACOS' return-type='real'>
      <formula>ACOS(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ASIN' return-type='real'>
      <formula>ASIN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ATAN' return-type='real'>
      <formula>ATAN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ATAN2' return-type='real'>
      <formula>ATAN2(%1,%2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='CEILING' return-type='real'>
      <formula>CEILING(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='CEILING' return-type='int'>
      <formula>CEILING(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='CEILING' return-type='int'>
      <formula>CEILING(%1)</formula>
      <argument type='int' />
    </function>
    <function group='numeric' name='COS' return-type='real'>
      <formula>COS(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='COT' return-type='real'>
      <formula>CASE WHEN %1 = 0 THEN NULL ELSE COT(%1) END</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='DEGREES' return-type='real'>
      <formula>DEGREES(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='DIV' return-type='int'>
      <formula>CASE WHEN %2 = 0 THEN NULL ELSE ( %1 / %2 ) END</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='EXP' return-type='real'>
      <formula>EXP(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='FLOOR' return-type='real'>
      <formula>FLOOR(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='FLOOR' return-type='int'>
      <formula>FLOOR(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='FLOOR' return-type='int'>
      <formula>FLOOR(%1)</formula>
      <argument type='int' />
    </function>
    <function group='numeric' name='HEXBINX' return-type='real'>
      <formula>(((CASE WHEN (ABS((%2) - (ROUND( ( (%2) / SQRT(3.0) )) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((%1) - (ROUND( ( (%1) / 3.0 ) ) * 3.0))) - 1.0) &gt; 0.0 THEN 1.5 ELSE 0.0 END ) - ( CASE WHEN ((%1) - (CAST( ( (%1) / 3.0 ) AS NUMERIC(18, 0) ) * 3.0) &lt; 0.0) AND ((CASE WHEN (ABS((%2) - (ROUND( ( (%2) / SQRT(3.0) ) ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((%1) - (ROUND( ( (%1) / 3.0 ) ) * 3.0))) - 1.0) &gt; 0.0 THEN 1.5 ELSE 0.0 END) &gt; 0.0) THEN 3.0 ELSE 0.0 END ) ) + (ROUND(( (%1) / 3.0 )) * 3.0))</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='HEXBINY' return-type='real'>
      <formula>TRUNCATE(((CASE WHEN (ABS((%2) - (ROUND( ( (%2) / SQRT(3.0) ) ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((%1) - (ROUND( ( (%1) / 3.0 ) ) * 3.0))) - 1.0) &gt; 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) - (CASE WHEN ((%2) - (ROUND( ( (%2) / SQRT(3.0) ) ) * SQRT(3.0)) &lt; 0.0) AND ((CASE WHEN (ABS((%2) - (ROUND( ( (%2) / SQRT(3.0) ) ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((%1) - (ROUND( ( (%1) / 3.0 ) ) * 3.0))) - 1.0) &gt; 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) &gt; 0.0) THEN SQRT(3.0) ELSE 0.0 END)) + (ROUND( ( (%2) / SQRT(3.0) ) ) * SQRT(3.0)),3)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='LN' return-type='real'>
      <formula>CASE WHEN %1 &lt;= 0 THEN NULL ELSE LOG(CAST(%1 AS DOUBLE)) END</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='LOG' return-type='real'>
      <formula>CASE WHEN %1 &lt;= 0 THEN NULL ELSE LOG10(%1) END</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='LOG' return-type='real'>
      <formula>CASE WHEN %1 &lt;= 0 THEN NULL ELSE (CASE WHEN %2 &lt; 0 THEN NULL ELSE LOG10(%1) / LOG10(%2) END) END</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='numeric' name='LOG2' return-type='real'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE WHEN %1 &gt;= 0 THEN LOG10(%1) / LOG10(2) ELSE NULL END) END</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='MAX' return-type='real'>
      <formula>(CASE&#10;&#9;%1 WHEN NULL THEN NULL&#10;&#9;ELSE (CASE %2 WHEN NULL THEN NULL&#10;&#9;ELSE (CASE WHEN %1 &lt; %2 THEN %2&#10;&#9;ELSE %1 END) END) END)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='MAX' return-type='int'>
      <formula>(CASE&#10;&#9;%1 WHEN NULL THEN NULL&#10;&#9;ELSE (CASE %2 WHEN NULL THEN NULL&#10;&#9;ELSE (CASE WHEN %1 &lt; %2 THEN %2&#10;&#9;ELSE %1 END) END) END)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='MAX' return-type='str'>
      <formula>(CASE&#10;&#9;%1 WHEN NULL THEN NULL&#10;&#9;ELSE (CASE %2 WHEN NULL THEN NULL&#10;&#9;ELSE WHEN %1 &lt; %2 THEN %2&#10;&#9;ELSE %1 END) END)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='numeric' name='MAX' return-type='datetime'>
      <formula>(CASE&#10;&#9;%1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN CAST(%1 AS TIMESTAMP) &gt; CAST(%2 AS TIMESTAMP) THEN %1 ELSE %2 END) END) END)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='numeric' name='MAX' return-type='date'>
      <formula>(CASE&#10;&#9;%1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN CAST(%1 AS DATE) &gt; CAST(%2 AS DATE) THEN %1 ELSE %2 END) END) END)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='numeric' name='MIN' return-type='real'>
      <formula>(CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN %1 &lt; %2 THEN %1 ELSE %2 END) END) END )</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='MIN' return-type='int'>
      <formula>(CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN %1 &lt; %2 THEN %1 ELSE %2 END) END) END )</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='MIN' return-type='str'>
      <formula>(CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN %1 &lt; %2 THEN %1 ELSE %2 END) END) END )</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='numeric' name='MIN' return-type='datetime'>
      <formula>(CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN CAST(%1 AS TIMESTAMP) &lt; CAST(%2 AS TIMESTAMP) THEN %1 ELSE %2 END) END) END )</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='numeric' name='MIN' return-type='date'>
      <formula>(CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN CAST(%1 AS DATE) &lt; CAST(%2 AS DATE) THEN %1 ELSE %2 END) END) END )</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='numeric' name='MOD' return-type='int'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE MOD(%1,%2) END) END</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='PI' return-type='real'>
      <formula>PI()</formula>
    </function>
    <function group='numeric' name='POWER' return-type='real'>
      <formula>POWER(%1,%2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='POWER' return-type='real'>
      <formula>POWER(%1,%2)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='numeric' name='POWER' return-type='real'>
      <formula>POWER(%1,%2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='RADIANS' return-type='real'>
      <formula>RADIANS(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ROUND' return-type='real'>
      <formula>ROUND(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ROUND' return-type='real'>
      <formula>TRUNC(%1,%2)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='numeric' name='ROUND' return-type='int'>
      <formula>ROUND(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SIGN' return-type='int'>
      <formula>SIGN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SIN' return-type='real'>
      <formula>SIN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SQRT' return-type='real'>
      <formula>CASE WHEN %1 &lt; 0 THEN NULL ELSE SQRT(CAST(%1 AS NUMERIC)) END</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SQUARE' return-type='real'>
      <formula>POWER(%1,2)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SQUARE' return-type='int'>
      <formula>POWER(CAST(%1 AS NUMERIC),2)</formula>
      <argument type='int' />
    </function>
    <function group='numeric' name='TAN' return-type='real'>
      <formula>TAN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='TRUNC' return-type='real'>
      <formula>TRUNC(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric;logical' name='ZN' return-type='real'>
      <formula>COALESCE(%1, 0)</formula>
      <argument type='real' />
    </function>
    <function group='numeric;logical' name='ZN' return-type='int'>
      <formula>IFNULL(%1, 0)</formula>
      <argument type='int' />
    </function>
    <function group='string' name='ASCII' return-type='int'>
      <formula>ASCII(SUBSTRING(%1,1,1))</formula>
      <argument type='str' />
    </function>
    <function group='string' name='CHAR' return-type='str'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE CHAR(%1) END</formula>
      <argument type='int' />
    </function>
    <function group='string' name='CONTAINS' return-type='bool'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE FN_CONTAINS(%1,%2) END) END</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='ENDSWITH' return-type='bool'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE FN_ENDS_WITH(%1,%2) END) END</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='FILTER_CONTAINS' return-type='bool'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE FN_CONTAINS(UCASE(%1), UCASE(%2)) END) END</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='FILTER_ENDSWITH' return-type='bool'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE FN_ENDS_WITH(UCASE(%1), UCASE(%2)) END) END</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='FILTER_STARTSWITH' return-type='bool'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE FN_STARTS_WITH(UCASE(%1), UCASE(%2)) END) END</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='FIND' return-type='int'>
      <formula>STRPOS(%1, %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='FIND' return-type='int'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE %3 WHEN NULL THEN NULL ELSE (CASE WHEN %3 &gt;= 1 THEN   (CASE WHEN STRPOS(SUBSTR(%1, %3), %2) = 0   THEN 0   ELSE STRPOS(SUBSTR(%1, %3), %2) + CAST(%3 AS INTEGER) - 1 END) WHEN %3 &lt; 1 THEN STRPOS(%1,%2) ELSE NULL END) END) END) END</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='FIND' return-type='int'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE %3 WHEN NULL THEN NULL ELSE (CASE WHEN %3 &gt;= 1 THEN   (CASE WHEN STRPOS(SUBSTR(%1, %3), %2) = 0   THEN 0   ELSE STRPOS(SUBSTR(%1, %3), %2) + CAST(%3 AS INTEGER) - 1 END) WHEN %3 &lt; 1 THEN STRPOS(%1,%2) ELSE NULL END) END) END) END</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='int' />
    </function>
    <function group='string' name='LEFT' return-type='str'>
      <formula>LEFT(%1,(CASE WHEN %2 &gt; 0 THEN %2 ELSE NULL END))</formula>
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='LEFT' return-type='str'>
      <formula>LEFT(%1,(CASE WHEN %2 &gt; 0 THEN %2 ELSE NULL END))</formula>
      <argument type='str' />
      <argument type='int' />
    </function>
    <function group='string' name='LEN' return-type='int'>
      <formula>CHAR_LENGTH(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='LOWER' return-type='str'>
      <formula>LOWER(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='LTRIM' return-type='str'>
      <formula>LTRIM(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='MAX' return-type='str'>
      <formula>(CASE&#10;&#9; %1 WHEN NULL THEN NULL&#10;&#9;ELSE (CASE %2 WHEN NULL THEN NULL&#10;&#9; ELSE (CASE WHEN %1 &lt; %2 THEN %2&#10;&#9;ELSE %1 END) END) END)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='MID' return-type='str'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN %2 &lt; 1 THEN NULL&#10;    ELSE SUBSTRING(%1,CAST(TRUNC(%2) AS INTEGER), CHAR_LENGTH(%1) - (CAST(TRUNC(%2) AS INTEGER)) + 1) END) END) END</formula>
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='MID' return-type='str'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN %2 &lt; 1 THEN NULL&#10;    ELSE SUBSTRING(%1,CAST(TRUNC(%2) AS INTEGER), CHAR_LENGTH(%1) - (CAST(TRUNC(%2) AS INTEGER)) + 1) END) END) END</formula>
      <argument type='str' />
      <argument type='int' />
    </function>
    <function group='string' name='MID' return-type='str'>
      <formula>&#10;CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE %3 WHEN NULL THEN NULL ELSE&#10;  (CASE WHEN CAST(FLOOR(%3) AS INTEGER) &lt; 1 THEN &apos;&apos; &#10; WHEN CAST(FLOOR(%2) AS INTEGER) &lt; 1 THEN SUBSTR(%1,1,CAST(FLOOR(%3) AS INTEGER))&#10;ELSE SUBSTR(%1, CAST(FLOOR(%2) AS INTEGER), CAST(FLOOR(%3) AS INTEGER)) END) END) END ) END</formula>
      <argument type='str' />
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='string' name='MID' return-type='str'>
      <formula>&#10;CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE %3 WHEN NULL THEN NULL ELSE&#10;  (CASE WHEN CAST(FLOOR(%3) AS INTEGER) &lt; 1 THEN &apos;&apos; &#10; WHEN CAST(FLOOR(%2) AS INTEGER) &lt; 1 THEN SUBSTR(%1,1,CAST(FLOOR(%3) AS INTEGER))&#10;ELSE SUBSTR(%1, CAST(FLOOR(%2) AS INTEGER), CAST(FLOOR(%3) AS INTEGER)) END) END) END ) END</formula>
      <argument type='str' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='string' name='MIN' return-type='str'>
      <formula>(CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN %1 &lt; %2 THEN %1 ELSE %2 END) END) END )</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='REPLACE' return-type='str'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE %3 WHEN NULL THEN NULL ELSE REPLACE(CAST(%1 AS TEXT), CAST(%2 AS TEXT), CAST(%3 AS TEXT)) END) END) END</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='RIGHT' return-type='str'>
      <formula>RIGHT(%1,(CASE WHEN %2 &gt;= 0 THEN %2 ELSE NULL END))</formula>
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='RIGHT' return-type='str'>
      <formula>RIGHT(%1,(CASE WHEN %2 &gt;= 0 THEN %2 ELSE NULL END))</formula>
      <argument type='str' />
      <argument type='int' />
    </function>
    <function group='string' name='RTRIM' return-type='str'>
      <formula>RTRIM(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='SPACE' return-type='str'>
      <formula>CASE WHEN CAST(%1 AS INT) &gt;= 0 THEN SPACE(CAST(%1 AS INT)) ELSE NULL END</formula>
      <argument type='real' />
    </function>
    <function group='string' name='SPACE' return-type='str'>
      <formula>CASE WHEN CAST(%1 AS INT) &gt;= 0 THEN SPACE(CAST(%1 AS INT)) ELSE NULL END</formula>
      <argument type='int' />
    </function>
    <function group='string' name='SPLIT' return-type='str'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE &apos;%2&apos; WHEN NULL THEN NULL ELSE (CASE %3 WHEN NULL THEN NULL ELSE FN_SUBSEQUENCE(FN_TOKENIZE(%1,&apos;%2&apos;),%3,1) END) END) END</formula>
      <argument type='str' />
      <argument type='localstr' />
      <argument type='localint' />
    </function>
    <function group='string' name='STARTSWITH' return-type='bool'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE FN_STARTS_WITH(%1,%2) END) END</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='TRIM' return-type='str'>
      <formula>LTRIM(RTRIM(CAST(%1 AS CHAR)))</formula>
      <argument type='str' />
    </function>
    <function group='string' name='UPPER' return-type='str'>
      <formula>UCASE(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='REGEXP_MATCH' return-type='bool'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE FN_MATCHES(%1, %2, 'smix') END) END</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNC(%1,0) AS INT),date '1900-01-01')</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>TIMESTAMPADD(SQL_TSI_DAY,%1,date '1900-01-01')</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>CAST(%1 AS DATE)</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>CAST(CAST(%1 AS TIMESTAMP) AS DATE)</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>%1</formula>
      <argument type='date' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>TIMESTAMPADD(SQL_TSI_FRAC_SECOND,CAST(TRUNCATE((%1 * 24 * 60 * 60 - CAST(TRUNCATE(%1 * 24 * 60 * 60,0) AS INTEGER))*1000000000,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_SECOND,CAST(TRUNCATE((%1 * 24 * 60 - CAST(TRUNCATE(%1 * 24 * 60,0) AS INTEGER)) * 60,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_MINUTE,CAST(TRUNCATE((%1 * 24 - CAST(TRUNCATE(%1 * 24,0) AS INTEGER)) * 60,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_HOUR,CAST(TRUNCATE((%1 - CAST(TRUNCATE(%1,0) AS INTEGER)) * 24,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE(%1,0) AS INTEGER),timestamp '1900-01-01 00:00:00')))))</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>TIMESTAMPADD(SQL_TSI_FRAC_SECOND,CAST(TRUNCATE((%1 * 24 * 60 * 60 - CAST(TRUNCATE(%1 * 24 * 60 * 60,0) AS INTEGER))*1000000000,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_SECOND,CAST(TRUNCATE((%1 * 24 * 60 - CAST(TRUNCATE(%1 * 24 * 60,0) AS INTEGER)) * 60,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_MINUTE,CAST(TRUNCATE((%1 * 24 - CAST(TRUNCATE(%1 * 24,0) AS INTEGER)) * 60,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_HOUR,CAST(TRUNCATE((%1 - CAST(TRUNCATE(%1,0) AS INTEGER)) * 24,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE(%1,0) AS INTEGER),timestamp '1900-01-01 00:00:00')))))</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>CAST(%1 AS TIMESTAMP)</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>%1</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>CAST(%1 AS TIMESTAMP)</formula>
      <argument type='date' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CAST(%1 AS NUMERIC)</formula>
      <argument type='bool' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>%1</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CAST(%1 AS NUMERIC)</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CAST(%1 AS NUMERIC)</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CAST(DATEDIFF('dd', '1900-01-01', %1) AS FLOAT)</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CAST(DATEDIFF('dd', '1900-01-01', %1) AS FLOAT)</formula>
      <argument type='date' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>CAST(%1 AS INT)</formula>
      <argument type='bool' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>CAST(TRUNC(%1) AS INT)</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>%1</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>TRUNC(CAST(%1 AS NUMERIC))</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>CAST(DATEDIFF('dd', '1900-01-01 01:01:01', %1) AS INTEGER)</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>CAST(DATEDIFF('dd', '1900-01-01', %1) AS INTEGER)</formula>
      <argument type='date' />
    </function>
    <function group='cast' name='MAKEDATE' return-type='date'>
      <formula>CAST(CONCAT(%1,CASE WHEN %2 >= 10 THEN '-' ELSE '-0' END,%2,CASE WHEN %3 >= 10 THEN '-' ELSE '-0' END,%3) AS DATE)</formula>
      <argument type='int' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='cast' name='REAL' return-type='real'>
      <formula>CAST(%1 as NUMERIC)</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>CAST(CAST(%1 as INT) AS CHAR)</formula>
      <argument type='bool' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>CAST(%1 as CHAR)</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>CAST(%1 as CHAR)</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>%1</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>CAST(%1 AS CHAR)</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>CAST(%1 AS CHAR)</formula>
      <argument type='date' />
    </function>
    <function group='logical' name='IFNULL' return-type='bool'>
      <formula>IFNULL(%1,%2)</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='logical' name='IFNULL' return-type='real'>
      <formula>IFNULL(%1, %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='logical' name='IFNULL' return-type='int'>
      <formula>CAST(IFNULL(%1, %2) AS INT)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='logical' name='IFNULL' return-type='str'>
      <formula>CAST(IFNULL(%1, %2) AS CHAR)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='logical' name='IFNULL' return-type='datetime'>
      <formula>COALESCE(%1, %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='logical' name='IFNULL' return-type='datetime'>
      <formula>COALESCE(%1,CAST(%2 as TIMESTAMP)))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='logical' name='IFNULL' return-type='datetime'>
      <formula>COALESCE(CAST(%1 as TIMESTAMP), %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='logical' name='IFNULL' return-type='date'>
      <formula>IFNULL(%1,%2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='logical' name='IFNULL' return-type='spatial'>
      <formula>COALESCE(%1, %2)</formula>
      <argument type='spatial' />
      <argument type='spatial' />
    </function>
    <function group='logical' name='IIF' return-type='bool'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE %3 WHEN NULL THEN NULL ELSE ((CAST(%1 AS INT) AND CAST(%2 AS INT)) OR ((NOT CAST(%1 AS INT)) AND CAST(%3 AS INT))) END) END) END</formula>
      <argument type='bool' />
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='logical' name='IIF' return-type='real'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END) END</formula>
      <argument type='bool' />
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='logical' name='IIF' return-type='real'>
      <formula>CASE %1 WHEN NULL THEN %4 ELSE (CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END) END</formula>
      <argument type='bool' />
      <argument type='real' />
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='logical' name='IIF' return-type='int'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END) END</formula>
      <argument type='bool' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='logical' name='IIF' return-type='int'>
      <formula>CASE %1 WHEN NULL THEN %4 ELSE (CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END) END</formula>
      <argument type='bool' />
      <argument type='int' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='logical' name='IIF' return-type='str'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END) END</formula>
      <argument type='bool' />
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='logical' name='IIF' return-type='str'>
      <formula>CASE %1 WHEN NULL THEN %4 ELSE(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END) END</formula>
      <argument type='bool' />
      <argument type='str' />
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='logical' name='IIF' return-type='datetime'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END) END</formula>
      <argument type='bool' />
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='logical' name='IIF' return-type='datetime'>
      <formula>CASE %1 WHEN NULL THEN %4 ELSE (CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END) END</formula>
      <argument type='bool' />
      <argument type='datetime' />
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='logical' name='IIF' return-type='date'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END) END</formula>
      <argument type='bool' />
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='logical' name='IIF' return-type='date'>
      <formula>CASE %1 WHEN NULL THEN %4 ELSE (CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END) END</formula>
      <argument type='bool' />
      <argument type='date' />
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='logical' name='IIF' return-type='spatial'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE (CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END) END</formula>
      <argument type='bool' />
      <argument type='spatial' />
      <argument type='spatial' />
    </function>
    <function group='logical' name='IIF' return-type='spatial'>
      <formula>CASE %1 WHEN NULL THEN %4 ELSE (CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END) END</formula>
      <argument type='bool' />
      <argument type='spatial' />
      <argument type='spatial' />
      <argument type='spatial' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='bool' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='real' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='str' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='datetime' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='spatial' />
    </function>
    <function group='aggregate' name='AVG' return-type='real'>
      <formula>AVG(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='AVG' return-type='real'>
      <formula>AVG(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='COLLECT' return-type='spatial'>
      <formula>AVG(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='spatial' />
    </function>
    <function group='aggregate' name='CORR' return-type='real'>
      <formula>MATH_CORRELATION(SEQUENCEAGG(JSON_TO_ARRAY(%1,%2)))</formula>
      <unagg-formula>CAST(NULL AS DECIMAL)</unagg-formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='aggregate' name='COUNT' return-type='int'>
      <formula>COUNT(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='bool' />
    </function>
    <function group='aggregate' name='COUNT' return-type='int'>
      <formula>COUNT(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='COUNT' return-type='int'>
      <formula>COUNT(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='COUNT' return-type='int'>
      <formula>COUNT(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='bool' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE %1 WHEN NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE %1 WHEN NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE %1 WHEN NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE %1 WHEN NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE %1 WHEN NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='date' />
    </function>
    <function group='aggregate' name='COVAR' return-type='real'>
      <formula>MATH_COVARIANCE(SEQUENCEAGG(JSON_TO_ARRAY(%1,%2)))</formula>
      <unagg-formula>NULL</unagg-formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='aggregate' name='COVARP' return-type='real'>
      <formula>MATH_COVARIANCE_P(SEQUENCEAGG(JSON_TO_ARRAY(%1,%2)))</formula>
      <unagg-formula>CASE %1 WHEN NULL THEN NULL &#10; ELSE (CASE %2 WHEN NULL THEN NULL&#10;ELSE 0.0&#10; END) END</unagg-formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='aggregate' name='MAX' return-type='bool'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='bool' />
    </function>
    <function group='aggregate' name='MAX' return-type='real'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='MAX' return-type='int'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='MAX' return-type='str'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='MAX' return-type='datetime'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='MAX' return-type='date'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='date' />
    </function>
    <function group='aggregate' name='MEDIAN' return-type='real'>
      <formula>MATH_MEDIAN(SEQUENCEAGG(%1))</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='MEDIAN' return-type='int'>
      <formula>MATH_MEDIAN(SEQUENCEAGG(%1))</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='MIN' return-type='bool'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='bool' />
    </function>
    <function group='aggregate' name='MIN' return-type='real'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='MIN' return-type='int'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='MIN' return-type='str'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='MIN' return-type='datetime'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='MIN' return-type='date'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='date' />
    </function>
    <function group='aggregate' name='PERCENTILE' return-type='real'>
      <formula>MATH_PERCENTILE((%1),(%2))</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
      <argument type='localreal' />
    </function>
    <function group='aggregate' name='PERCENTILE' return-type='real'>
      <formula>MATH_PERCENTILE((%1),(%2))</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
      <argument type='localreal' />
    </function>
    <function group='aggregate' name='STDEV' return-type='real'>
      <formula>MATH_STDDEV(SEQUENCEAGG(%1))</formula>
      <unagg-formula>NULL</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='STDEVP' return-type='real'>
      <formula>MATH_STDDEV_P(SEQUENCEAGG(%1))</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN NULL ELSE 0.0 END)</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='SUM' return-type='real'>
      <formula>SUM(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='SUM' return-type='int'>
      <formula>SUM(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='VAR' return-type='real'>
      <formula>MATH_VARIANCE(SEQUENCEAGG(%1))</formula>
      <unagg-formula>NULL</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='VARP' return-type='real'>
      <formula>MATH_VARIANCE_P(SEQUENCEAGG(%1))</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN NULL ELSE 0.0 END)</unagg-formula>
      <argument type='real' />
    </function>
    <function group='operator' name='!' return-type='bool'>
      <formula>(NOT %1)</formula>
      <argument type='bool' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>%1 != %2</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>%1 != CAST(%2 AS BOOLEAN)</formula>
      <argument type='bool' />
      <argument type='int' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>CAST(%1 AS BOOLEAN) != %2</formula>
      <argument type='int' />
      <argument type='bool' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &lt;&gt; %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &lt;&gt; CAST(CAST(%2 AS DATE) AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(CAST(CAST(%1 AS DATE) AS TIMESTAMP) &lt;&gt; CAST(%2 AS TIMESTAMP))</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='%' return-type='real'>
      <formula>MOD(%1,%2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='%' return-type='int'>
      <formula>MOD(%1,%2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='&amp;&amp;' return-type='bool'>
      <formula>(%1 AND %2)</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='operator' name='*' return-type='real'>
      <formula>(%1 * %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='*' return-type='real'>
      <formula>(CAST(%1 AS DECIMAL) * %2)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='operator' name='*' return-type='real'>
      <formula>(%1 * CAST(%2 AS DECIMAL))</formula>
      <argument type='int' />
      <argument type='real' />
    </function>
    <function group='operator' name='*' return-type='int'>
      <formula>(%1 * %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='+' return-type='real'>
      <formula>(%1 + %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='+' return-type='int'>
      <formula>(%1 + %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='+' return-type='str'>
      <formula>CONCAT(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='+' return-type='datetime'>
      <formula>TIMESTAMPADD(SQL_TSI_FRAC_SECOND,CAST(TRUNCATE((%2 * 24 * 60 * 60 - CAST(TRUNCATE(%2 * 24 * 60 * 60,0) AS INTEGER))*1000000000,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_SECOND,CAST(TRUNCATE((%2 * 24 * 60 - CAST(TRUNCATE(%2 * 24 * 60,0) AS INTEGER)) * 60,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_MINUTE,CAST(TRUNCATE((%2 * 24 - CAST(TRUNCATE(%2 * 24,0) AS INTEGER)) * 60,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_HOUR,CAST(TRUNCATE((%2 - CAST(TRUNCATE(%2,0) AS INTEGER)) * 24,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE(%2,0) AS INTEGER),CAST(%1 AS TIMESTAMP))))))</formula>
      <argument type='datetime' />
      <argument type='real' />
    </function>
    <function group='operator' name='+' return-type='datetime'>
      <formula>TIMESTAMPADD(SQL_TSI_DAY,%2,%1)</formula>
      <argument type='datetime' />
      <argument type='int' />
    </function>
    <function group='operator' name='+' return-type='datetime'>
      <formula>TIMESTAMPADD(SQL_TSI_FRAC_SECOND,CAST(TRUNCATE((%2 * 24 * 60 * 60 - CAST(TRUNCATE(%2 * 24 * 60 * 60,0) AS INTEGER))*1000000000,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_SECOND,CAST(TRUNCATE((%2 * 24 * 60 - CAST(TRUNCATE(%2 * 24 * 60,0) AS INTEGER)) * 60,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_MINUTE,CAST(TRUNCATE((%2 * 24 - CAST(TRUNCATE(%2 * 24,0) AS INTEGER)) * 60,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_HOUR,CAST(TRUNCATE((%2 - CAST(TRUNCATE(%2,0) AS INTEGER)) * 24,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE(%2,0) AS INTEGER),CAST(%1 AS TIMESTAMP))))))</formula>
      <argument type='date' />
      <argument type='real' />
    </function>
    <function group='operator' name='+' return-type='date'>
      <formula>TIMESTAMPADD(SQL_TSI_DAY,%2,%1)</formula>
      <argument type='date' />
      <argument type='int' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>-1 * %1</formula>
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>(%1 - %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>TIMESTAMPDIFF(SQL_TSI_DAY,CAST(%2 AS TIMESTAMP),CAST(%1 AS TIMESTAMP)) + (EXTRACT(HOUR FROM CAST(%1 AS TIMESTAMP)) - EXTRACT(HOUR FROM CAST(%2 AS TIMESTAMP)) + (EXTRACT(MINUTE FROM CAST(%1 AS TIMESTAMP)) - EXTRACT(MINUTE FROM CAST(%2 AS TIMESTAMP)) + (EXTRACT(SECOND FROM CAST(%1 AS TIMESTAMP)) - EXTRACT(SECOND FROM CAST(%2 AS TIMESTAMP))) / 60.0) / 60.0) / 24.0</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>TIMESTAMPDIFF(SQL_TSI_DAY,CAST(%2 AS DATE),CAST(%1 AS TIMESTAMP)) + (EXTRACT(HOUR FROM CAST(%1 AS TIMESTAMP)) - EXTRACT(HOUR FROM CAST(%2 AS DATE)) + (EXTRACT(MINUTE FROM CAST(%1 AS TIMESTAMP)) - EXTRACT(MINUTE FROM CAST(%2 AS DATE)) + (EXTRACT(SECOND FROM CAST(%1 AS TIMESTAMP)) - EXTRACT(SECOND FROM CAST(%2 AS DATE))) / 60.0) / 60.0) / 24.0</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='-' return-type='int'>
      <formula>-1 * %1</formula>
      <argument type='int' />
    </function>
    <function group='operator' name='-' return-type='int'>
      <formula>(%1 - %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='-' return-type='int'>
      <formula>DATEDIFF('dd', CAST(%2 as DATE), CAST(%1 as DATE))</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='-' return-type='datetime'>
      <formula>TIMESTAMPADD(SQL_TSI_FRAC_SECOND,CAST(TRUNCATE((%2 * 24 * 60 * 60 - CAST(TRUNCATE(%2 * 24 * 60 * 60,0) AS INTEGER))*-1000000000,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_SECOND,CAST(TRUNCATE((%2 * 24 * 60 - CAST(TRUNCATE(%2 * 24 * 60,0) AS INTEGER)) * -60,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_MINUTE,CAST(TRUNCATE((%2 * 24 - CAST(TRUNCATE(%2 * 24,0) AS INTEGER)) * -60,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_HOUR,CAST(TRUNCATE((%2 - CAST(TRUNCATE(%2,0) AS INTEGER)) * -24,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE(-%2,0) AS INTEGER),CAST(%1 AS TIMESTAMP))))))</formula>
      <argument type='datetime' />
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='datetime'>
      <formula>TIMESTAMPADD(SQL_TSI_DAY,-%2,CAST(%1 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='int' />
    </function>
    <function group='operator' name='-' return-type='datetime'>
      <formula>TIMESTAMPADD(SQL_TSI_FRAC_SECOND,CAST(TRUNCATE((%2 * 24 * 60 * 60 - CAST(TRUNCATE(%2 * 24 * 60 * 60,0) AS INTEGER))*-1000000000,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_SECOND,CAST(TRUNCATE((%2 * 24 * 60 - CAST(TRUNCATE(%2 * 24 * 60,0) AS INTEGER)) * -60,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_MINUTE,CAST(TRUNCATE((%2 * 24 - CAST(TRUNCATE(%2 * 24,0) AS INTEGER)) * -60,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_HOUR,CAST(TRUNCATE((%2 - CAST(TRUNCATE(%2,0) AS INTEGER)) * -24,0) AS INTEGER),TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE(-%2,0) AS INTEGER),CAST(%1 AS TIMESTAMP))))))</formula>
      <argument type='date' />
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='date'>
      <formula>DATEADD('dd',-1 * %2,%1)</formula>
      <argument type='date' />
      <argument type='int' />
    </function>
    <function group='operator' name='/' return-type='real'>
      <formula>CASE WHEN %2 &lt;&gt; 0 THEN %1 / %2 END</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='/' return-type='real'>
      <formula>(CASE WHEN %2 &lt;&gt; 0 THEN %1 / %2 END)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='operator' name='/' return-type='real'>
      <formula>(CASE WHEN %2 &lt;&gt; 0 THEN %1 / %2 END)</formula>
      <argument type='int' />
      <argument type='real' />
    </function>
    <function group='operator' name='/' return-type='real'>
      <formula>(CASE WHEN %2 &lt;&gt; 0 THEN %1 / %2 END)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= %2)</formula>
      <argument type='int' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>CAST(%1 AS TIMESTAMP) &lt; CAST(%2 AS TIMESTAMP)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &lt; CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &lt; CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &lt; CAST(CAST(%2 AS DATE) AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(CAST(CAST(%1 AS DATE) AS TIMESTAMP) &lt; CAST(%2 AS TIMESTAMP))</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(CAST(%1 AS DATE) &lt; CAST(%2 AS DATE))</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &lt;= CAST(%2 AS TIMESTAMP))</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &lt;= CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &lt;= CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &lt;= CAST(CAST(%2 AS DATE) AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(CAST(CAST(%1 AS DATE) AS TIMESTAMP) &lt;= CAST(%2 AS TIMESTAMP))</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(CAST(%1 AS DATE) &lt;= CAST(%2 AS DATE))</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>CAST(%1 AS BOOLEAN) = CAST(%2 AS BOOLEAN)</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>%1 = CAST(%2 AS BOOLEAN)</formula>
      <argument type='bool' />
      <argument type='int' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>CAST(%1 AS BOOLEAN) = %2</formula>
      <argument type='int' />
      <argument type='bool' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) = CAST(%2 AS TIMESTAMP))</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) = CAST(%2 AS TIMESTAMP)</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) = CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) = CAST(CAST(%2 AS DATE) AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(CAST(CAST(%1 AS DATE) AS TIMESTAMP) = CAST(%2 AS TIMESTAMP))</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(CAST(%1 AS DATE) = CAST(%2 AS DATE))</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &gt; CAST(%2 AS TIMESTAMP))</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &gt; CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &gt; CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &gt; CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &gt; CAST(%2 AS TIMESTAMP))</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(CAST(%1 AS DATE) &gt; CAST(%2 AS DATE))</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= %2)</formula>
      <argument type='int' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &gt;= CAST(%2 AS TIMESTAMP))</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &gt;= CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &gt;= CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &gt;= CAST(CAST(%2 AS DATE) AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &gt;= CAST(%2 AS TIMESTAMP))</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(CAST(%1 AS DATE) &gt;= CAST(%2 AS DATE))</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='^^' return-type='real'>
      <formula>(CASE WHEN (%1 &lt; 0 OR %1 IS NULL) AND TRUNC(%2) &lt;&gt; %2 THEN NULL ELSE POWER(%1,%2) END)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='^^' return-type='real'>
      <formula>(CASE WHEN (%1 &lt; 0 OR %1 IS NULL) AND FLOOR(%2) &lt;&gt; %2 THEN NULL ELSE POWER(%1,%2) END)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='operator' name='^^' return-type='real'>
      <formula>POWER(CAST(%1 AS INT),%2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='||' return-type='bool'>
      <formula>(%1 OR %2)</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='date' name='DAY' return-type='int'>
      <formula>DATEPART('dd', %1)</formula>
      <argument type='datetime' />
    </function>
    <function group='date' name='DAY' return-type='int'>
      <formula>DATEPART('dd', %1)</formula>
      <argument type='date' />
    </function>
    <function group='date' name='MAX' return-type='datetime'>
      <formula>(CASE&#10;&#9;%1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN CAST(%1 AS TIMESTAMP) &gt; CAST(%2 AS TIMESTAMP) THEN %1 ELSE %2 END) END) END)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='date' name='MAX' return-type='date'>
      <formula>(CASE&#10;&#9;%1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN CAST(%1 AS DATE) &gt; CAST(%2 AS DATE) THEN %1 ELSE %2 END) END) END)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='date' name='MIN' return-type='datetime'>
      <formula>(CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN CAST(%1 AS TIMESTAMP) &lt; CAST(%2 AS TIMESTAMP) THEN %1 ELSE %2 END) END) END )</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='date' name='MIN' return-type='date'>
      <formula>(CASE %1 WHEN NULL THEN NULL ELSE (CASE %2 WHEN NULL THEN NULL ELSE (CASE WHEN CAST(%1 AS DATE) &lt; CAST(%2 AS DATE) THEN %1 ELSE %2 END) END) END )</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='date' name='MONTH' return-type='int'>
      <formula>DATEPART('month',%1)</formula>
      <argument type='datetime' />
    </function>
    <function group='date' name='MONTH' return-type='int'>
      <formula>DATEPART('month',%1)</formula>
      <argument type='date' />
    </function>
    <function group='date' name='NOW' return-type='datetime'>
      <formula>FN_CURRENT_DATETIME()</formula>
    </function>
    <function group='date' name='TIMESTAMP_TO_USEC' return-type='int'>
      <formula>TIMESTAMPDIFF(SQL_TSI_SECOND,CAST('1970-01-01 00:00:00' AS TIMESTAMP),%1)</formula>
      <argument type='datetime' />
    </function>
    <function group='date' name='TODAY' return-type='date'>
      <formula>CAST(FN_CURRENT_DATETIME() AS DATE)</formula>
    </function>
    <function group='date' name='USEC_TO_TIMESTAMP' return-type='datetime'>
      <formula>TIMESTAMPADD(SQL_TSI_SECOND,%1,CAST('1970-01-01 00:00:00' AS TIMESTAMP))</formula>
      <argument type='int' />
    </function>
    <function group='date' name='YEAR' return-type='int'>
      <formula>DATEPART('year', CAST(%1 AS TIMESTAMP))</formula>
      <argument type='datetime' />
    </function>
    <function group='date' name='YEAR' return-type='int'>
      <formula>DATEPART('year', CAST(%1 AS DATE))</formula>
      <argument type='date' />
    </function>
    
    <!--
      date-function
      Doesn't require a group. Can contain multiple formulas
      for different date parts. If a part-specific formula is missing, Tableau
      will use the generic (no part attribute) formula.
    -->
    <date-function name='DATEADD' return-type='datetime'>
      <formula>DATEADD(&apos;%1&apos;,ROUND(%2),%3)</formula>
      <formula part='year'>DATEADD(&apos;year&apos;,ROUND(%2),%3)</formula>
      <formula part='quarter'>DATEADD(&apos;quarter&apos;,ROUND(%2),%3)</formula>
      <formula part='month'>DATEADD(&apos;month&apos;,ROUND(%2),%3)</formula>
      <formula part='dayofyear'>DATEADD(&apos;dayofyear&apos;,ROUND(%2),%3)</formula>
      <formula part='day'>DATEADD(&apos;day&apos;,ROUND(%2),%3)</formula>
      <formula part='weekday'>DATEADD(&apos;day&apos;,ROUND(%2),%3)</formula>
      <formula part='week'>DATEADD(&apos;week&apos;,ROUND(%2),%3)</formula>
      <formula part='hour'>DATEADD(&apos;hour&apos;,ROUND(%2),%3)</formula>
      <formula part='minute'>DATEADD(&apos;minute&apos;,ROUND(%2),%3)</formula>
      <formula part='second'>DATEADD(&apos;second&apos;,ROUND(%2),%3)</formula>
      <argument type='localstr' />
      <argument type='real' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEADD' return-type='datetime'>
      <formula>DATEADD(&apos;%1&apos;,%2,%3)</formula>
      <formula part='year'>DATEADD(&apos;year&apos;,%2,%3)</formula>
      <formula part='quarter'>DATEADD(&apos;quarter&apos;,%2,%3)</formula>
      <formula part='month'>DATEADD(&apos;month&apos;,%2,%3)</formula>
      <formula part='dayofyear'>DATEADD(&apos;dayofyear&apos;,%2,%3)</formula>
      <formula part='day'>DATEADD(&apos;day&apos;,%2,%3)</formula>
      <formula part='weekday'>DATEADD(&apos;day&apos;,%2,%3)</formula>
      <formula part='week'>DATEADD(&apos;week&apos;,%2,%3)</formula>
      <formula part='hour'>DATEADD(&apos;hour&apos;,%2,%3)</formula>
      <formula part='minute'>DATEADD(&apos;minute&apos;,%2,%3)</formula>
      <formula part='second'>DATEADD(&apos;second&apos;,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='int' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>TIMESTAMPDIFF(SQL_TSI_YEAR,%2,%3)</formula>
      <formula part='quarter'>TIMESTAMPDIFF(SQL_TSI_QUARTER,%2,%3)</formula>
      <formula part='month'>TIMESTAMPDIFF(SQL_TSI_MONTH,%2,%3)</formula>
      <formula part='dayofyear'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='day'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='weekday'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='week'>CAST( TRUNCATE( TIMESTAMPDIFF(SQL_TSI_DAY, TIMESTAMPADD(SQL_TSI_DAY,(-1 * CAST( MOD((7 +  DAYOFWEEK(%2)), 7) AS INT)),CAST(%2 AS DATE)), TIMESTAMPADD(SQL_TSI_DAY,(-1 * CAST( MOD((7 +  DAYOFWEEK(%3)), 7) AS INT)),CAST(%3 AS DATE))) / 7,0) AS INTEGER)</formula>
      <formula part='hour'>TIMESTAMPDIFF(SQL_TSI_HOUR,%2,%3)</formula>
      <formula part='minute'>TIMESTAMPDIFF(SQL_TSI_MINUTE,%2,%3)</formula>
      <formula part='second'>TIMESTAMPDIFF(SQL_TSI_SECOND,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>TIMESTAMPDIFF(SQL_TSI_YEAR,%2,%3)</formula>
      <formula part='quarter'>TIMESTAMPDIFF(SQL_TSI_QUARTER,%2,%3)</formula>
      <formula part='month'>TIMESTAMPDIFF(SQL_TSI_MONTH,%2,%3)</formula>
      <formula part='dayofyear'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='day'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='weekday'>TIMESTAMPDIFF(SQL_TSI_DAY,CAST(%2 AS TIMESTAMP),CAST(%3 AS TIMESTAMP))</formula>
      <formula part='week'>TIMESTAMPDIFF(SQL_TSI_WEEK,CAST(%2 AS TIMESTAMP),CAST(%3 AS TIMESTAMP))</formula>
      <formula part='hour'>TIMESTAMPDIFF(SQL_TSI_HOUR,%2,%3)</formula>
      <formula part='minute'>TIMESTAMPDIFF(SQL_TSI_MINUTE,%2,%3)</formula>
      <formula part='second'>TIMESTAMPDIFF(SQL_TSI_SECOND,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='date' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>TIMESTAMPDIFF(SQL_TSI_YEAR,%2,%3)</formula>
      <formula part='quarter'>TIMESTAMPDIFF(SQL_TSI_QUARTER,%2,%3)</formula>
      <formula part='month'>TIMESTAMPDIFF(SQL_TSI_MONTH,%2,%3)</formula>
      <formula part='dayofyear'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='day'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='weekday'>TIMESTAMPDIFF(SQL_TSI_DAY,CAST(%2 AS TIMESTAMP),CAST(%3 AS TIMESTAMP))</formula>
      <formula part='week'>TIMESTAMPDIFF(SQL_TSI_WEEK,CAST(%2 AS TIMESTAMP),CAST(%3 AS TIMESTAMP))</formula>
      <formula part='hour'>TIMESTAMPDIFF(SQL_TSI_HOUR,%2,%3)</formula>
      <formula part='minute'>TIMESTAMPDIFF(SQL_TSI_MINUTE,%2,%3)</formula>
      <formula part='second'>TIMESTAMPDIFF(SQL_TSI_SECOND,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>TIMESTAMPDIFF(SQL_TSI_YEAR,%2,%3)</formula>
      <formula part='quarter'>TIMESTAMPDIFF(SQL_TSI_QUARTER,%2,%3)</formula>
      <formula part='month'>TIMESTAMPDIFF(SQL_TSI_MONTH,%2,%3)</formula>
      <formula part='dayofyear'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='day'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='weekday'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='week'>CAST( TRUNCATE( TIMESTAMPDIFF(SQL_TSI_DAY, TIMESTAMPADD(SQL_TSI_DAY,(-1 * CAST( MOD((7 +  DAYOFWEEK(%2)), 7) AS INT)),CAST(%2 AS DATE)), TIMESTAMPADD(SQL_TSI_DAY,(-1 * CAST( MOD((7 +  DAYOFWEEK(%3)), 7) AS INT)),CAST(%3 AS DATE))) / 7,0) AS INTEGER)</formula>
      <formula part='hour'>TIMESTAMPDIFF(SQL_TSI_HOUR,%2,%3)</formula>
      <formula part='minute'>TIMESTAMPDIFF(SQL_TSI_MINUTE,%2,%3)</formula>
      <formula part='second'>TIMESTAMPDIFF(SQL_TSI_SECOND,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='date' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>TIMESTAMPDIFF(SQL_TSI_YEAR,%2,%3)</formula>
      <formula part='quarter'>TIMESTAMPDIFF(SQL_TSI_QUARTER,%2,%3)</formula>
      <formula part='month'>TIMESTAMPDIFF(SQL_TSI_MONTH,%2,%3)</formula>
      <formula part='dayofyear'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='day'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='weekday'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='week'>CAST( TRUNCATE( TIMESTAMPDIFF(SQL_TSI_DAY, TIMESTAMPADD(SQL_TSI_DAY,(-1 * CAST( MOD((7 + DAYOFWEEK(%2) + (CASE UPPER(CAST(%4 AS CHAR)) WHEN 'SUNDAY' THEN 1 ELSE -3 END)), 7) AS INT)),CAST(%2 AS DATE)), TIMESTAMPADD(SQL_TSI_DAY,(-1 * CAST( MOD((7 +  DAYOFWEEK(%3) + (CASE UPPER(CAST(%4 AS CHAR)) WHEN 'SUNDAY' THEN 2 ELSE -3 END)), 7) AS INT)),CAST(%3 AS DATE))) / 7,0) AS INTEGER)</formula>
      <formula part='hour'>TIMESTAMPDIFF(SQL_TSI_HOUR,%2,%3)</formula>
      <formula part='minute'>TIMESTAMPDIFF(SQL_TSI_MINUTE,%2,%3)</formula>
      <formula part='second'>TIMESTAMPDIFF(SQL_TSI_SECOND,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>TIMESTAMPDIFF(SQL_TSI_YEAR,%2,%3)</formula>
      <formula part='quarter'>TIMESTAMPDIFF(SQL_TSI_QUARTER,%2,%3)</formula>
      <formula part='month'>TIMESTAMPDIFF(SQL_TSI_MONTH,%2,%3)</formula>
      <formula part='dayofyear'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='day'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='weekday'>TIMESTAMPDIFF(SQL_TSI_DAY,CAST(%2 AS TIMESTAMP),CAST(%3 AS TIMESTAMP))</formula>
      <formula part='week'>TIMESTAMPDIFF(SQL_TSI_WEEK,CAST(%2 AS TIMESTAMP),CAST(%3 AS TIMESTAMP))</formula>
      <formula part='hour'>TIMESTAMPDIFF(SQL_TSI_HOUR,%2,%3)</formula>
      <formula part='minute'>TIMESTAMPDIFF(SQL_TSI_MINUTE,%2,%3)</formula>
      <formula part='second'>TIMESTAMPDIFF(SQL_TSI_SECOND,%2,%3)</formula>
      <argument type='datetime' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>TIMESTAMPDIFF(SQL_TSI_YEAR,%2,%3)</formula>
      <formula part='quarter'>TIMESTAMPDIFF(SQL_TSI_QUARTER,%2,%3)</formula>
      <formula part='month'>TIMESTAMPDIFF(SQL_TSI_MONTH,%2,%3)</formula>
      <formula part='dayofyear'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='day'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='weekday'>TIMESTAMPDIFF(SQL_TSI_DAY,CAST(%2 AS TIMESTAMP),CAST(%3 AS TIMESTAMP))</formula>
      <formula part='week'>TIMESTAMPDIFF(SQL_TSI_WEEK,CAST(%2 AS TIMESTAMP),CAST(%3 AS TIMESTAMP))</formula>
      <formula part='hour'>TIMESTAMPDIFF(SQL_TSI_HOUR,%2,%3)</formula>
      <formula part='minute'>TIMESTAMPDIFF(SQL_TSI_MINUTE,%2,%3)</formula>
      <formula part='second'>TIMESTAMPDIFF(SQL_TSI_SECOND,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>TIMESTAMPDIFF(SQL_TSI_YEAR,%2,%3)</formula>
      <formula part='quarter'>TIMESTAMPDIFF(SQL_TSI_QUARTER,%2,%3)</formula>
      <formula part='month'>TIMESTAMPDIFF(SQL_TSI_MONTH,%2,%3)</formula>
      <formula part='dayofyear'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='day'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='weekday'>TIMESTAMPDIFF(SQL_TSI_DAY,%2,%3)</formula>
      <formula part='week'>CAST( TRUNCATE( TIMESTAMPDIFF(SQL_TSI_DAY, TIMESTAMPADD(SQL_TSI_DAY,(-1 * CAST( MOD((7 + DAYOFWEEK(%2) + (CASE UPPER(CAST(%4 AS CHAR)) WHEN 'SUNDAY' THEN 1 ELSE -3 END)), 7) AS INT)),CAST(%2 AS DATE)), TIMESTAMPADD(SQL_TSI_DAY,(-1 * CAST( MOD((7 +  DAYOFWEEK(%3) + (CASE UPPER(CAST(%4 AS CHAR)) WHEN 'SUNDAY' THEN 2 ELSE -3 END)), 7) AS INT)),CAST(%3 AS DATE))) / 7,0) AS INTEGER)</formula>
      <formula part='hour'>TIMESTAMPDIFF(SQL_TSI_HOUR,%2,%3)</formula>
      <formula part='minute'>TIMESTAMPDIFF(SQL_TSI_MINUTE,%2,%3)</formula>
      <formula part='second'>TIMESTAMPDIFF(SQL_TSI_SECOND,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATENAME' return-type='str'>
      <formula>CAST(DATEPART(&apos;%1&apos;,%2) AS CHAR)</formula>
      <formula part='year'>CAST(DATEPART(&apos;yy&apos;,%2) AS CHAR)</formula>
      <formula part='quarter'>CAST(DATEPART(&apos;qq&apos;,%2) AS CHAR)</formula>
      <formula part='month'>MONTHNAME(%2)</formula>
      <formula part='dayofyear'>XDMP_YEARDAY_FROM_DATE(CAST(%2 AS DATE))</formula>
      <formula part='day'>CAST(CAST(TRUNCATE(EXTRACT(DAY FROM CAST(%2 AS TIMESTAMP)),0) AS INTEGER) AS CHAR)</formula>
      <formula part='weekday'>DAYNAME(%2)</formula>
      <formula part='week'>CAST(CAST(TRUNCATE((6 + DAYOFYEAR(%2) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(%2) - 1)),0) AS INTEGER),CAST(%2 AS DATE)))), 7))) / 7,0) AS INTEGER) AS CHAR)</formula>
      <formula part='hour'>CAST(CAST(TRUNCATE(EXTRACT(HOUR FROM %2),0) AS INTEGER) AS CHAR)</formula>
      <formula part='minute'>CAST(CAST(TRUNCATE(EXTRACT(MINUTE FROM %2),0) AS INTEGER) AS CHAR)</formula>
      <formula part='second'>CAST(CAST(TRUNCATE(EXTRACT(SECOND FROM %2),0) AS INTEGER) AS CHAR)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATENAME' return-type='str'>
      <formula>CAST(DATEPART(&apos;%1&apos;,%2) AS CHAR)</formula>
      <formula part='year'>CAST(DATEPART(&apos;yy&apos;,%2) AS CHAR)</formula>
      <formula part='quarter'>CAST(DATEPART(&apos;qq&apos;,%2) AS CHAR)</formula>
      <formula part='month'>MONTHNAME(%2)</formula>
      <formula part='dayofyear'>XDMP_YEARDAY_FROM_DATE(CAST(%2 AS DATE))</formula>
      <formula part='day'>EXTRACT(DAY FROM (CAST(%2 AS DATE)))</formula>
      <formula part='weekday'>DAYNAME(CAST(%2 AS DATE))</formula>
      <formula part='week'>CAST(CAST(TRUNCATE((6 + DAYOFYEAR(%2) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(%2) - 1)),0) AS INTEGER),CAST(%2 AS DATE)))), 7))) / 7,0) AS INTEGER) AS CHAR)</formula>
      <formula part='hour'>CAST(CAST(TRUNCATE(EXTRACT(HOUR FROM %2),0) AS INTEGER) AS CHAR)</formula>
      <formula part='minute'>CAST(CAST(TRUNCATE(EXTRACT(MINUTE FROM %2),0) AS INTEGER) AS CHAR)</formula>
      <formula part='second'>CAST(CAST(TRUNCATE(EXTRACT(SECOND FROM %2),0) AS INTEGER) AS CHAR)</formula>
      <argument type='localstr' />
      <argument type='date' />
    </date-function>
    <date-function name='DATENAME' return-type='str'>
      <formula part='year'>CAST(DATEPART(&apos;yy&apos;,%2) AS CHAR)</formula>
      <formula part='quarter'>CAST(DATEPART(&apos;qq&apos;,%2) AS CHAR)</formula>
      <formula part='month'>MONTHNAME(%2)</formula>
      <formula part='dayofyear'>XDMP_YEARDAY_FROM_DATE(CAST(%2 AS DATE))</formula>
      <formula part='day'>CAST(CAST(TRUNCATE(EXTRACT(DAY FROM CAST(%2 AS TIMESTAMP)),0) AS INTEGER) AS CHAR)</formula>
      <formula part='weekday'>DAYNAME(%2)</formula>
      <formula part='week'>CAST(CAST(TRUNCATE((6 + DAYOFYEAR(%2) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(%2) - (CASE UPPER(CAST(%3 AS CHAR)) WHEN 'SUNDAY' THEN 1 ELSE 0 END) )),0) AS INTEGER),CAST(%2 AS DATE)))), 7))) / 7,0) AS INTEGER) AS CHAR)</formula>
      <formula part='hour'>CAST(CAST(TRUNCATE(EXTRACT(HOUR FROM %2),0) AS INTEGER) AS CHAR)</formula>
      <formula part='minute'>CAST(CAST(TRUNCATE(EXTRACT(MINUTE FROM %2),0) AS INTEGER) AS CHAR)</formula>
      <formula part='second'>CAST(CAST(TRUNCATE(EXTRACT(SECOND FROM %2),0) AS INTEGER) AS CHAR)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATENAME' return-type='str'>
      <formula part='year'>CAST(DATEPART(&apos;yy&apos;,%2) AS CHAR)</formula>
      <formula part='quarter'>CAST(DATEPART(&apos;qq&apos;,%2) AS CHAR)</formula>
      <formula part='month'>MONTHNAME(%2)</formula>
      <formula part='dayofyear'>XDMP_YEARDAY_FROM_DATE(CAST(%2 AS DATE))</formula>
      <formula part='day'>EXTRACT(DAY FROM (CAST(%2 AS DATE)))</formula>
      <formula part='weekday'>DAYNAME(CAST(%2 AS DATE))</formula>
      <formula part='week'>CAST(CAST(TRUNCATE((6 + DAYOFYEAR(%2) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(%2) - (CASE UPPER(CAST(%3 AS CHAR)) WHEN 'SUNDAY' THEN 1 ELSE 0 END) )),0) AS INTEGER),CAST(%2 AS DATE)))), 7))) / 7,0) AS INTEGER) AS CHAR) </formula>
      <formula part='hour'>CAST(CAST(TRUNCATE(EXTRACT(HOUR FROM CAST(CAST(%2 AS DATE) AS TIMESTAMP)),0) AS INTEGER) AS CHAR)</formula>
      <formula part='minute'>CAST(CAST(TRUNCATE(EXTRACT(MINUTE FROM CAST(CAST(%2 AS DATE) AS TIMESTAMP)),0) AS INTEGER) AS CHAR)</formula>
      <formula part='second'>CAST(CAST(TRUNCATE(EXTRACT(SECOND FROM CAST(CAST(%2 AS DATE) AS TIMESTAMP)),0) AS INTEGER) AS CHAR)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEPARSE' return-type='datetime'>
      <formula>CASE %1 WHEN NULL THEN NULL ELSE CAST(FN_FORMAT_DATETIME(%2, %1) AS TIMESTAMP) END</formula>
      <argument type='localstr' />
      <argument type='str' />
    </date-function>
    <date-function name='DATEPART' return-type='int'>
      <formula part='year'>CAST(YEAR(CAST(%2 AS TIMESTAMP)) AS INTEGER)</formula>
      <formula part='quarter'>CAST(QUARTER(CAST(%2 AS TIMESTAMP)) AS INTEGER)</formula>
      <formula part='month'>CAST(MONTH(CAST(%2 AS TIMESTAMP)) AS INTEGER)</formula>
      <formula part='dayofyear'>DAYOFYEAR(CAST(%2 AS TIMESTAMP))</formula>
      <formula part='day'>CAST(DAY(CAST(%2 AS TIMESTAMP)) AS INTEGER)</formula>
      <formula part='weekday'>CAST(MOD((7 + DAYOFWEEK(%2)), 7) + 1 AS INT)</formula>
      <formula part='week'>CAST(TRUNCATE((6 + DAYOFYEAR(%2) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(%2) - 1)),0) AS INTEGER),CAST(%2 AS DATE)))), 7))) / 7,0) AS INTEGER)</formula>
      <formula part='hour'>HOUR(CAST(%2 AS TIMESTAMP))</formula>
      <formula part='minute'>MINUTE(CAST(%2 AS TIMESTAMP))</formula>
      <formula part='second'>SECOND(CAST(%2 AS TIMESTAMP))</formula>
      <argument type='localstr' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEPART' return-type='int'>
      <formula part='year'>CAST(YEAR(CAST(%2 AS DATE)) AS INTEGER)</formula>
      <formula part='quarter'>CAST(QUARTER(CAST(%2 AS DATE)) AS INTEGER)</formula>
      <formula part='month'>CAST(MONTH(CAST(%2 AS DATE)) AS INTEGER)</formula>
      <formula part='dayofyear'>DAYOFYEAR(CAST(%2 AS DATE))</formula>
      <formula part='day'>CAST(DAY(CAST(%2 AS DATE)) AS INTEGER)</formula>
      <formula part='weekday'>CAST(MOD((7 + DAYOFWEEK(%2)), 7) + 1 AS INT)</formula>
      <formula part='week'>CAST(TRUNCATE((6 + DAYOFYEAR(%2) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(%2) - 1)),0) AS INTEGER),CAST(%2 AS DATE)))), 7))) / 7,0) AS INTEGER)</formula>
      <formula part='hour'>HOUR(%2)</formula>
      <formula part='minute'>MINUTE(%2)</formula>
      <formula part='second'>SECOND(%2)</formula>
      <argument type='localstr' />
      <argument type='date' />
    </date-function>
    <date-function name='DATEPART' return-type='int'>
      <formula part='year'>CAST(YEAR(CAST(%2 AS TIMESTAMP)) AS INTEGER)</formula>
      <formula part='quarter'>CAST(QUARTER(CAST(%2 AS TIMESTAMP)) AS INTEGER)</formula>
      <formula part='month'>CAST(MONTH(CAST(%2 AS TIMESTAMP)) AS INTEGER)</formula>
      <formula part='dayofyear'>DAYOFYEAR(CAST(%2 AS TIMESTAMP))</formula>
      <formula part='day'>CAST(DAY(CAST(%2 AS TIMESTAMP)) AS INTEGER)</formula>
      <formula part='weekday'>DAYOFWEEK(CAST(%2 AS TIMESTAMP))</formula>
      <formula part='week'>CAST(CAST(TRUNCATE((6 + DAYOFYEAR(%2) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(%2) - (CASE UPPER(CAST(%3 AS CHAR)) WHEN 'SUNDAY' THEN 1 ELSE 0 END) )),0) AS INTEGER),CAST(%2 AS DATE)))), 7))) / 7,0) AS INTEGER) AS CHAR)</formula>
      <formula part='hour'>HOUR(CAST(%2 AS TIMESTAMP))</formula>
      <formula part='minute'>MINUTE(CAST(%2 AS TIMESTAMP))</formula>
      <formula part='second'>SECOND(CAST(%2 AS TIMESTAMP))</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEPART' return-type='int'>
      <formula part='year'>CAST(YEAR(CAST(%2 AS DATE)) AS INTEGER)</formula>
      <formula part='quarter'>CAST(QUARTER(CAST(%2 AS DATE)) AS INTEGER)</formula>
      <formula part='month'>CAST(MONTH(CAST(%2 AS DATE)) AS INTEGER)</formula>
      <formula part='dayofyear'>DAYOFYEAR(CAST(%2 AS DATE))</formula>
      <formula part='day'>CAST(DAY(CAST(%2 AS DATE)) AS INTEGER)</formula>
      <formula part='weekday'>DAYOFWEEK(CAST(%2 AS DATE))</formula>
      <formula part='week'>CAST(CAST(TRUNCATE((6 + DAYOFYEAR(%2) + (MOD((7 + DAYOFWEEK(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(%2) - (CASE UPPER(CAST(%3 AS CHAR)) WHEN 'SUNDAY' THEN 1 ELSE 0 END) )),0) AS INTEGER),CAST(%2 AS DATE)))), 7))) / 7,0) AS INTEGER) AS CHAR)</formula>
      <formula part='hour'>HOUR(%2)</formula>
      <formula part='minute'>MINUTE(%2)</formula>
      <formula part='second'>SECOND(%2)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATETRUNC' return-type='datetime'>
      <formula part='year'>CAST(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(CAST(%2 AS TIMESTAMP)) - 1)),0) AS INTEGER),CAST(CAST(%2 AS TIMESTAMP) AS DATE)) AS TIMESTAMP)</formula>
      <formula part='quarter'>TIMESTAMPADD(SQL_TSI_MONTH,CAST(TRUNCATE((3 * (CAST(TRUNCATE(QUARTER(CAST(%2 AS TIMESTAMP)),0) AS INTEGER) - 1)),0) AS INTEGER),TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(CAST(%2 AS TIMESTAMP)) - 1)),0) AS INTEGER),CAST(CAST(%2 AS TIMESTAMP) AS TIMESTAMP)))</formula>
      <formula part='month'>CAST(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (EXTRACT(DAY FROM CAST(%2 AS TIMESTAMP)) - 1)),0) AS INTEGER),CAST(CAST(%2 AS TIMESTAMP) AS DATE)) AS TIMESTAMP)</formula>
      <formula part='dayofyear'>CAST(CAST(CAST(%2 AS TIMESTAMP) AS DATE) AS TIMESTAMP)</formula>
      <formula part='day'>CAST(CAST(CAST(%2 AS TIMESTAMP) AS DATE) AS TIMESTAMP)</formula>
      <formula part='weekday'>CAST(CAST(CAST(%2 AS TIMESTAMP) AS DATE) AS TIMESTAMP)</formula>
      <formula part='week'>CAST(TIMESTAMPADD(SQL_TSI_DAY,CAST(-1 * (MOD((7 + DAYOFWEEK(%2)), 7)) AS INT),CAST(%2 AS DATE)) AS TIMESTAMP)</formula>
      <formula part='hour'>TIMESTAMPADD(SQL_TSI_HOUR,EXTRACT(HOUR FROM %2),CAST(CAST(%2 AS DATE) AS TIMESTAMP))</formula>
      <formula part='minute'>TIMESTAMPADD(SQL_TSI_MINUTE,EXTRACT(MINUTE FROM %2),TIMESTAMPADD(SQL_TSI_HOUR,EXTRACT(HOUR FROM %2),CAST(CAST(%2 AS DATE) AS TIMESTAMP)))</formula>
      <formula part='second'>%2</formula>
      <argument type='localstr' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATETRUNC' return-type='datetime'>
      <formula part='year'>TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(CAST(%2 AS DATE)) - 1)),0) AS INTEGER),CAST(CAST(%2 AS DATE) AS DATE))</formula>
      <formula part='quarter'>TIMESTAMPADD(SQL_TSI_MONTH,CAST(TRUNCATE((3 * (CAST(TRUNCATE(QUARTER(CAST(%2 AS DATE)),0) AS INTEGER) - 1)),0) AS INTEGER),TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(CAST(%2 AS DATE)) - 1)),0) AS INTEGER),CAST(CAST(%2 AS DATE) AS DATE)))</formula>
      <formula part='month'>TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (EXTRACT(DAY FROM CAST(%2 AS DATE)) - 1)),0) AS INTEGER),CAST(CAST(%2 AS DATE) AS DATE))</formula>
      <formula part='dayofyear'>CAST(CAST(%2 AS DATE) AS TIMESTAMP)</formula>
      <formula part='day'>CAST(CAST(%2 AS DATE) AS TIMESTAMP)</formula>
      <formula part='weekday'>CAST(CAST(%2 AS DATE) AS TIMESTAMP)</formula>
      <formula part='week'>CAST(TIMESTAMPADD(SQL_TSI_DAY,CAST(-1 * (MOD((7 + DAYOFWEEK(%2)), 7)) AS INT),CAST(%2 AS DATE)) AS TIMESTAMP)</formula>
      <formula part='hour'>TIMESTAMPADD(SQL_TSI_HOUR,EXTRACT(HOUR FROM %2),CAST(CAST(%2 AS DATE) AS TIMESTAMP))</formula>
      <formula part='minute'>TIMESTAMPADD(SQL_TSI_MINUTE,EXTRACT(MINUTE FROM %2),TIMESTAMPADD(SQL_TSI_HOUR,EXTRACT(HOUR FROM %2),CAST(CAST(%2 AS DATE) AS TIMESTAMP)))</formula>
      <formula part='second'>CAST(%2 AS TIMESTAMP)</formula>
      <argument type='localstr' />
      <argument type='date' />
    </date-function>
    <date-function name='DATETRUNC' return-type='datetime'>
      <formula part='year'>CAST(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(CAST(%2 AS TIMESTAMP)) - 1)),0) AS INTEGER),CAST(CAST(%2 AS TIMESTAMP) AS DATE)) AS TIMESTAMP)</formula>
      <formula part='quarter'>TIMESTAMPADD(SQL_TSI_MONTH,CAST(TRUNCATE((3 * (CAST(TRUNCATE(QUARTER(CAST(%2 AS TIMESTAMP)),0) AS INTEGER) - 1)),0) AS INTEGER),TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(CAST(%2 AS TIMESTAMP)) - 1)),0) AS INTEGER),CAST(CAST(%2 AS TIMESTAMP) AS TIMESTAMP)))</formula>
      <formula part='month'>CAST(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (EXTRACT(DAY FROM CAST(%2 AS TIMESTAMP)) - 1)),0) AS INTEGER),CAST(CAST(%2 AS TIMESTAMP) AS DATE)) AS TIMESTAMP)</formula>
      <formula part='dayofyear'>CAST(CAST(%2 AS DATE) AS TIMESTAMP)</formula>
      <formula part='day'>CAST(CAST(%2 AS DATE) AS TIMESTAMP)</formula>
      <formula part='weekday'>CAST(CAST(CAST(%2 AS TIMESTAMP) AS DATE) AS TIMESTAMP)</formula>
      <formula part='week'>CAST(TIMESTAMPADD(SQL_TSI_DAY,CAST(-1 * (MOD((7 + DAYOFWEEK(%2)), 7)) AS INT),CAST(%2 AS DATE)) AS TIMESTAMP)</formula>
      <formula part='hour'>TIMESTAMPADD(SQL_TSI_HOUR,EXTRACT(HOUR FROM %2),CAST(CAST(%2 AS DATE) AS TIMESTAMP))</formula>
      <formula part='minute'>TIMESTAMPADD(SQL_TSI_MINUTE,EXTRACT(MINUTE FROM %2),TIMESTAMPADD(SQL_TSI_HOUR,EXTRACT(HOUR FROM %2),CAST(CAST(%2 AS DATE) AS TIMESTAMP)))</formula>
      <formula part='second'>CAST(%2 AS TIMESTAMP)</formula>
     <argument type='localstr' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATETRUNC' return-type='datetime'>
      <formula part='year'>CAST(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(CAST(%2 AS TIMESTAMP)) - 1)),0) AS INTEGER),CAST(CAST(%2 AS TIMESTAMP) AS DATE)) AS TIMESTAMP)</formula>
      <formula part='quarter'>TIMESTAMPADD(SQL_TSI_MONTH,CAST(TRUNCATE((3 * (CAST(TRUNCATE(QUARTER(CAST(%2 AS TIMESTAMP)),0) AS INTEGER) - 1)),0) AS INTEGER),TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (DAYOFYEAR(CAST(%2 AS TIMESTAMP)) - 1)),0) AS INTEGER),CAST(CAST(%2 AS TIMESTAMP) AS TIMESTAMP)))</formula>
      <formula part='month'>CAST(TIMESTAMPADD(SQL_TSI_DAY,CAST(TRUNCATE((-1 * (EXTRACT(DAY FROM CAST(%2 AS TIMESTAMP)) - 1)),0) AS INTEGER),CAST(CAST(%2 AS TIMESTAMP) AS DATE)) AS TIMESTAMP)</formula>
      <formula part='dayofyear'>CAST(CAST(CAST(%2 AS TIMESTAMP) AS DATE) AS TIMESTAMP)</formula>
      <formula part='day'>CAST(CAST(CAST(%2 AS TIMESTAMP) AS DATE) AS TIMESTAMP)</formula>
      <formula part='weekday'>CAST(CAST(CAST(%2 AS TIMESTAMP) AS DATE) AS TIMESTAMP)</formula>
      <formula part='week'>CAST(TIMESTAMPADD(SQL_TSI_DAY,(-1 * (DAYOFWEEK(CAST(%2 AS TIMESTAMP)) - 1)),CAST(CAST(%2 AS TIMESTAMP) AS DATE)) AS TIMESTAMP)</formula>
      <formula part='hour'>TIMESTAMPADD(SQL_TSI_HOUR,EXTRACT(HOUR FROM %2),CAST(CAST(%2 AS DATE) AS TIMESTAMP))</formula>
      <formula part='minute'>TIMESTAMPADD(SQL_TSI_MINUTE,EXTRACT(MINUTE FROM %2),TIMESTAMPADD(SQL_TSI_HOUR,EXTRACT(HOUR FROM %2),CAST(CAST(%2 AS DATE) AS TIMESTAMP)))</formula>
      <formula part='second'>CAST(%2 AS TIMESTAMP)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
    <remove-function name='GROUP_CONCAT'>
      <argument type='str' />
    </remove-function>
    <remove-function name='MAKEDATETIME'>
      <argument type='str' />
      <argument type='datetime' />
    </remove-function>
    <remove-function name='MAKEDATETIME'>
      <argument type='datetime' />
      <argument type='datetime' />
    </remove-function>
    <remove-function name='MAKEDATETIME'>
      <argument type='date' />
      <argument type='datetime' />
    </remove-function>
    <remove-function name='MAKETIME'>
      <argument type='int' />
      <argument type='int' />
      <argument type='int' />
    </remove-function>
    <remove-function name='FINDNTH'>
      <argument type='str' />
      <argument type='str' />
      <argument type='real' />
    </remove-function>
    <remove-function name='GET_JSON_OBJECT'>
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='HOST'>
      <argument type='str' />
    </remove-function>
        <remove-function name='XPATH_DOUBLE'>
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='XPATH_FLOAT'>
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='XPATH_INT'>
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='XPATH_LONG'>
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='XPATH_SHORT'>
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='LTRIM_THIS'>
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='PARSE_URL'>
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='PARSE_URL_QUERY'>
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='REGEXP_EXTRACT'>
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='REGEXP_EXTRACT_NTH'>
      <argument type='str' />
      <argument type='str' />
      <argument type='localint' />
    </remove-function>
    <remove-function name='REGEXP_REPLACE'>
      <argument type='str' />
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='RTRIM_THIS'>
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='XPATH_STRING'>
      <argument type='str' />
      <argument type='str' />
    </remove-function>
    <remove-function name='ISDATE'>
      <argument type='str' />
    </remove-function>
  </function-map>
  <sql-format>
    <format-date-literal formula="CAST ('%1' AS DATE)"  format='yyyy-MM-dd' />
    <format-datetime-literal formula="CAST ('%1' AS TIMESTAMP)" format='yyyy-MM-dd HH:mm:ss.SSS' />
    <format-false literal='CAST(0 AS BOOLEAN)' predicate=''/>
    <format-is-distinct value='Formula' />
    <format-order-by value='Nulls' />
    <format-select>
      <part name='Select' value='SELECT %1' />
      <part name='From' value='FROM %1' />
      <part name='Where' value='WHERE %1' />
      <part name='Group' value='GROUP BY %1' />
      <part name='Having' value='HAVING %1' />
      <part name='OrderBy' value='ORDER BY %1' />
      <part name='Top' value='LIMIT %1' />
    </format-select>
    <format-true literal='CAST(1 AS BOOLEAN)' predicate=''/>
    <start-of-week-offset value='7' />
    <supported-joins>
      <part name='Inner' />
      <part name='Left' />
      <part name='Right' />
      <part name='Full' />
    </supported-joins>
  </sql-format>
</dialect>